<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>florian.piratebay</string>
	<key>category</key>
	<string>Internet</string>
	<key>connections</key>
	<dict>
		<key>11D00DB4-9EF5-4B26-9CAC-0B38A8BC18CC</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>9182F96C-F392-49BF-AF44-B8AC2B369C06</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>62417640-7FEF-4354-AD51-9CEDD837056A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E5516F08-E1D8-4E2B-8987-04332CD4306A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>7B2FEBEA-C1A3-4863-B06C-C8E75A2CFA29</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DE0FE3A3-E0E1-4C90-AA68-052CC36D5238</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>5F84ABA7-BE4D-4B6C-B48A-418ADEB09ACB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>7B7195A0-B322-47B5-93A4-CABF636DC7D7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F1C16B28-B0AE-4FFB-92C9-CE5DAD7825FC</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>5F84ABA7-BE4D-4B6C-B48A-418ADEB09ACB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>7E0CC73D-1624-4E18-8D05-C865A95E4ECD</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CB9BF956-62A4-4B48-BCA6-F8F2B15B2C0A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>86FC9EB0-92B8-431C-9F6E-0E85B4231B95</string>
				<key>modifiers</key>
				<integer>8388608</integer>
				<key>modifiersubtext</key>
				<string>Run search on thepiratebay.se</string>
			</dict>
		</array>
		<key>868D1166-AD5A-4A91-B944-6DCEBDBAF3E0</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D135D6C9-2EF0-484D-A840-217D9AD43EFB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>5F84ABA7-BE4D-4B6C-B48A-418ADEB09ACB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>B9233BFF-87D0-4C35-AE45-C019CB36985A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3EA65E6C-C782-4E38-9E09-80C12CEC5901</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>5F84ABA7-BE4D-4B6C-B48A-418ADEB09ACB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>E5516F08-E1D8-4E2B-8987-04332CD4306A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>11D00DB4-9EF5-4B26-9CAC-0B38A8BC18CC</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>7B7195A0-B322-47B5-93A4-CABF636DC7D7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>868D1166-AD5A-4A91-B944-6DCEBDBAF3E0</string>
				<key>modifiers</key>
				<integer>8388608</integer>
				<key>modifiersubtext</key>
				<string>Open torrent page on website</string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B9233BFF-87D0-4C35-AE45-C019CB36985A</string>
				<key>modifiers</key>
				<integer>262144</integer>
				<key>modifiersubtext</key>
				<string>Run search on website</string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>F29A164F-4FC1-4B89-9271-6B3B9E000AF8</string>
				<key>modifiers</key>
				<integer>524288</integer>
				<key>modifiersubtext</key>
				<string>Stream with NodeJS' Peerflix</string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>7B2FEBEA-C1A3-4863-B06C-C8E75A2CFA29</string>
				<key>modifiers</key>
				<integer>524288</integer>
				<key>modifiersubtext</key>
				<string>Stream with NodeJS' Peerflix</string>
			</dict>
		</array>
		<key>F29A164F-4FC1-4B89-9271-6B3B9E000AF8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>57121C63-F8DD-405E-95D4-9187890FAC23</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Florian Pellet</string>
	<key>description</key>
	<string>find magnet links</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Piratebay</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>Download started...</string>
				<key>title</key>
				<string>{query}</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>9182F96C-F392-49BF-AF44-B8AC2B369C06</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>100</integer>
				<key>script</key>
				<string>$data = unserialize("{query}");
echo $data['title'];</string>
				<key>type</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>11D00DB4-9EF5-4B26-9CAC-0B38A8BC18CC</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>100</integer>
				<key>keyword</key>
				<string>pirate</string>
				<key>runningsubtext</key>
				<string>Search for {query} in progress...</string>
				<key>script</key>
				<string>
	//TODO
	// suggest proper category when the name is wrong (with string distance)

	$query = "Video ➔ Movies ➔ aloud";
	$query = "{query}";

	require_once('workflows.php');
	$w = new Workflows();

	//vars
	$cache = $w-&gt;cache(); //replace with alfred's cache
	$expiration = time() - 2 * 3600; //2 hours
	$table_id = "searchResult";
	$split_symbol = " ➔ ";
	$min_query = 3;
	$categories = array(
		100 =&gt; "Audio",
		101 =&gt; "Music",
		102 =&gt; "Audio books",
		103 =&gt; "Sound clips",
		104 =&gt; "FLAC",
		199 =&gt; "Other",
		200 =&gt; "Video",
		201 =&gt; "Movies",
		202 =&gt; "Movies DVDR",
		203 =&gt; "Music videos",
		204 =&gt; "Movie clips",
		205 =&gt; "TV shows",
		206 =&gt; "Handheld",
		207 =&gt; "HD - Movies",
		208 =&gt; "HD - TV shows",
		209 =&gt; "3D",
		299 =&gt; "Other",
		300 =&gt; "Applications",
		301 =&gt; "Windows",
		302 =&gt; "Mac",
		303 =&gt; "UNIX",
		304 =&gt; "Handheld",
		305 =&gt; "IOS (iPad/iPhone)",
		306 =&gt; "Android",
		399 =&gt; "Other OS",
		400 =&gt; "Games",
		401 =&gt; "PC",
		402 =&gt; "Mac",
		403 =&gt; "PSx",
		404 =&gt; "XBOX360",
		405 =&gt; "Wii",
		406 =&gt; "Handheld",
		407 =&gt; "IOS (iPad/iPhone)",
		408 =&gt; "Android",
		499 =&gt; "Other",
		500 =&gt; "Porn",
		501 =&gt; "Movies",
		502 =&gt; "Movies DVDR",
		503 =&gt; "Pictures",
		504 =&gt; "Games",
		505 =&gt; "HD - Movies",
		506 =&gt; "Movie clips",
		599 =&gt; "Other",
		600 =&gt; "Other",
		601 =&gt; "E-books",
		602 =&gt; "Comics",
		603 =&gt; "Pictures",
		604 =&gt; "Covers",
		605 =&gt; "Physibles",
		699 =&gt; "Other"
	);

	//parse query
	$category = 0;
	$parts = explode($split_symbol, $query);

	if(count($parts)&gt;1){
		//match main category
		$matched_category = false;
		$main_category = 0;
		reset($parts);
		foreach ($categories as $key =&gt; $name) {
			if($key%100==0 &amp;&amp; strcmp(strtolower(preg_replace("/[^a-zA-Z0-9]+/", "", $name)), strtolower(preg_replace("/[^a-zA-Z0-9]+/", "", current($parts)))) === 0){
				$matched_category = true;
				$main_category = $key;
				break;
			}
		}
		if(!$matched_category){
			// &lt;------------------------------------------------------------------ END POINT 0.1: error in main category name
			// echo "the category \"".current($parts)."\" is invalid\n";
			$w-&gt;result( '', '', "The primary category \"".current($parts)."\" is invalid", "Try another category or remove the '$split_symbol' character to search normally", "", 'no', '' );
			echo $w-&gt;toxml();
			return;
		}
		$category = $main_category;
	}
	if(count($parts)&gt;2){
		//match sub category
		$matched_category = false;
		$sub_category = 0;
		next($parts);
		foreach ($categories as $key =&gt; $name) {
			if(floor($key/100)==$main_category/100 &amp;&amp; $key!=$main_category &amp;&amp; strpos(strtolower($name), strtolower(current($parts))) === 0){
				$matched_category = true;
				$sub_category = $key;
				break;
			}
		}
		if(!$matched_category){
			// &lt;------------------------------------------------------------------ END POINT 0.2: error in sub category name
			// echo "the category \"".current($parts)."\" is invalid\n";
			$w-&gt;result( '', '', "The subcategory \"".current($parts)."\" is invalid", "Try another category or remove the '$split_symbol' character to search normally", "", 'no', '' );
			echo $w-&gt;toxml();
			return;
		}
		$category = $sub_category;
	}

	if(!(strlen(end($parts))&gt;$min_query)){
		$matched_category = false;
		if(count($parts)==1){ // there is no main category
			if(strlen($query)==0){
				// output main categories
				$matched_category = true;
				foreach ($categories as $key =&gt; $name) {
					if($key%100==0){
						// echo "$name\n";
						$w-&gt;result( $key, $name, $name, "Tab to search for $name only", "", 'no', "$name$split_symbol" );
					}
				}
			} else {
				//match all categories
				foreach ($categories as $key =&gt; $name) {
					foreach (preg_split("/[^a-zA-Z0-9]+/", $name) as $particule) {
						if(strpos(strtolower($particule), strtolower($query)) === 0){
							$matched_category = true;
							if($key%100!=0){
								$name = $categories[100*floor($key/100)].$split_symbol.$name;
							}
							// echo "$name\n";
							$w-&gt;result( $key, $name, $name, "Tab to search for $name only", "", 'no', "$name$split_symbol" );
							break;
						}
					}
				}
			}
		} elseif(count($parts)==2){ // there is a main category
			if(strlen(end($parts))==0){
				//output all relevant sub categories
				$matched_category = true;
				foreach ($categories as $key =&gt; $name) {
					if(floor($key/100)==$main_category/100 &amp;&amp; $key!=$main_category){
						$name = $categories[$main_category].$split_symbol.$name;
						// echo "$name\n";
						$w-&gt;result( $key, $name, $name, "Tab to search for $name only", "", 'no', "$name$split_symbol" );
					}
				}
			} else {
				//match relevant sub categories
				foreach ($categories as $key =&gt; $name) {
					if(floor($key/100)==$main_category/100 &amp;&amp; $key!=$main_category){
						foreach (preg_split("/[^a-zA-Z0-9]+/", $name) as $particule) {
							if(strpos(strtolower($particule), strtolower(end($parts))) === 0){
								$matched_category = true;
								$name = $categories[$main_category].$split_symbol.$name;
								// echo "$name\n";
								$w-&gt;result( $key, $name, $name, "Tab to search for $name only", "", 'no', "$name$split_symbol" );
								break;
							}
						}
					}
				}
			}
		}
		if(!$matched_category){
			// &lt;------------------------------------------------------------------ END POINT 1: error, query too short
			// echo "query too short, keep typing\n";
			if(strlen(end($parts))==0)
				$subtitle = "Type a query to get the magic going :)";
			else
				$subtitle = "The query \"".end($parts)."\" is too short ; it requires ".(4-strlen(end($parts)))." more character".(strlen(end($parts))==3?"":"s").".";
			$w-&gt;result( '', '', "...", $subtitle, "", 'no', '' );
			echo $w-&gt;toxml();
			return;
		}
		// &lt;------------------------------------------------------------------ END POINT 2: output categories
		echo $w-&gt;toxml();
		return;
	}
	$search = end($parts);


	//create document
	$doc = new DOMDocument('1.0', 'UTF-8');
	libxml_use_internal_errors(true);

	//try retreiving from cache
	$cachedPages = glob("$cache/$search/$category/*.html");
	$tempTime = explode("\.", basename($cachedPages[0]))[0];
	if (count($cachedPages) &gt; 0 &amp;&amp; $tempTime &gt; $expiration) {
		$doc-&gt;loadHTML(file_get_contents($cachedPages[0]));
	}

	//defaults to curl if page not in cache
	if (count($cachedPages) &lt;= 0 || $tempTime &lt;= $expiration) {
		$handle = curl_init("http://thepiratebay.se/search/".urlencode($search)."/0/7/$category");
		curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);
		curl_setopt($handle, CURLOPT_FOLLOWLOCATION, 1);
		curl_setopt($handle, CURLOPT_CONNECTTIMEOUT, 20);
		curl_setopt($handle, CURLOPT_TIMEOUT, 20);
		curl_setopt($handle, CURLOPT_ENCODING, 'gzip,deflate,sdch');
		$newPage = curl_exec($handle);
		$httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);
		curl_close($handle);

		if ($newPage !== FALSE &amp;&amp; $httpCode == 200) {
			if (count($cachedPages) &gt; 0) unlink($cachedPages[0]);
			elseif (!file_exists("$cache/$search/$category/")) {
				mkdir("$cache/$search/$category/", 0777, true);
			}
			file_put_contents("$cache/$search/$category/" . time() . ".html", $newPage);
			$doc-&gt;loadHTML($newPage);
		}
		if ($newPage === FALSE) {
			$cachedPages = glob("$cache/$search/$category/*.html");
			if (count($cachedPages) &gt; 0){
				$doc-&gt;loadHTML(file_get_contents($cachedPages[0]));
			}
			else{
				// echo "no archive, no cache, no connection\n";
				$w-&gt;result( '', '', "The query \"$search\" couldn't reach piratebay.", "We do not have \"$search\" in cache nor in the archives and piratebay can't be reached...", "", 'no', '' );
				echo $w-&gt;toxml();
				// &lt;------------------------------------------------------------------ END POINT 3: error, piratebay unavailable
				return;
			}
		}
	}

	//extracting results
	$results = $doc-&gt;getElementById($table_id);
	if(!$results){
		// echo "no result\n";
		$w-&gt;result( '', '', "No result for \"$search\"", "No hits. Try adding an asterisk in you search phrase.", "", 'no', '' );
		echo $w-&gt;toxml();
		// &lt;-------------------------------------------------------------------------- END POINT 4: error, no result
		return;
	}
	foreach ($results-&gt;childNodes as $node){
		if(strcmp($node-&gt;nodeName, "thead") !== 0){
			$items = $node-&gt;getElementsByTagName('td');
			$main_type = $categories[end(explode("/", $items-&gt;item(0)-&gt;getElementsByTagName('a')-&gt;item(0)-&gt;getAttribute('href')))];
			$sub_type  = $categories[end(explode("/", $items-&gt;item(0)-&gt;getElementsByTagName('a')-&gt;item(1)-&gt;getAttribute('href')))];
			$link = $items-&gt;item(1)-&gt;getElementsByTagName('a')-&gt;item(0)-&gt;getAttribute('href');
			$id = explode("/", $link)[2];
			$title = $items-&gt;item(1)-&gt;getElementsByTagName('a')-&gt;item(0)-&gt;nodeValue;
			$magnet = $items-&gt;item(1)-&gt;getElementsByTagName('a')-&gt;item(1)-&gt;getAttribute('href');
			$size = explode(", ",  explode(", Size ", $items-&gt;item(1)-&gt;getElementsByTagName('font')-&gt;item(0)-&gt;nodeValue)[1])[0];
			$seed = $items-&gt;item(2)-&gt;nodeValue;
			$leech = $items-&gt;item(3)-&gt;nodeValue;

			// echo "$main_type, $sub_type, $id, $title, $size, $seed, $leech, $magnet\n\n";

			$argument = serialize(array(
				"title" =&gt; $title,
				"magnet" =&gt; $magnet,
				"link" =&gt; $link,
				"category" =&gt; $category,
				"search" =&gt; urlencode($search))
			);

			$w-&gt;result( $id, $argument, $title, "$main_type ($sub_type), Size: $size, Seeders: $seed, Leechers: $leech, for \"$search\"", "", 'yes', $title );
		}
	}
	// &lt;-------------------------------------------------------------------------- END POINT 5: output results
	echo $w-&gt;toxml();
	return;
</string>
				<key>subtext</key>
				<string>Search with thepiratebay in alfred</string>
				<key>title</key>
				<string>Search PirateBay for '{query}'</string>
				<key>type</key>
				<integer>1</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>E5516F08-E1D8-4E2B-8987-04332CD4306A</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>1</integer>
				<key>hotkey</key>
				<integer>35</integer>
				<key>hotmod</key>
				<integer>262144</integer>
				<key>hotstring</key>
				<string>P</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>62417640-7FEF-4354-AD51-9CEDD837056A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>open -g "{query}"</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.script</string>
			<key>uid</key>
			<string>F1C16B28-B0AE-4FFB-92C9-CE5DAD7825FC</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>100</integer>
				<key>script</key>
				<string>$data = unserialize("{query}");
echo $data['magnet'];</string>
				<key>type</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>7B7195A0-B322-47B5-93A4-CABF636DC7D7</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>100</integer>
				<key>script</key>
				<string>$data = unserialize("{query}");
echo "http://thepiratebay.se".$data['link'];</string>
				<key>type</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>868D1166-AD5A-4A91-B944-6DCEBDBAF3E0</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>open "{query}"</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.script</string>
			<key>uid</key>
			<string>D135D6C9-2EF0-484D-A840-217D9AD43EFB</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>100</integer>
				<key>script</key>
				<string>$data = unserialize("{query}");
echo "http://thepiratebay.se/search/".$data['search']."/0/7/".$data['category'];</string>
				<key>type</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B9233BFF-87D0-4C35-AE45-C019CB36985A</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>open "{query}"</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.script</string>
			<key>uid</key>
			<string>3EA65E6C-C782-4E38-9E09-80C12CEC5901</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>Streaming in a second...</string>
				<key>title</key>
				<string>{query}</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>57121C63-F8DD-405E-95D4-9187890FAC23</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>100</integer>
				<key>script</key>
				<string>$data = unserialize("{query}");
echo $data['title'];</string>
				<key>type</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F29A164F-4FC1-4B89-9271-6B3B9E000AF8</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>100</integer>
				<key>script</key>
				<string>$data = unserialize("{query}");
echo $data['magnet'];</string>
				<key>type</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>7B2FEBEA-C1A3-4863-B06C-C8E75A2CFA29</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>export PATH=$PATH:/usr/local/bin
peerflix "{query}" -qvr -f /private/tmp/torrent-stream/</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.script</string>
			<key>uid</key>
			<string>DE0FE3A3-E0E1-4C90-AA68-052CC36D5238</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>require_once ('workflows.php');
$w = new Workflows();
$cachedPages = glob("$cache/*");

// $cache = $w-&gt;cache();
$cache = "cache";
$expiration = time() - 48 * 3600;

$di = new RecursiveDirectoryIterator($cache);
foreach (new RecursiveIteratorIterator($di) as $filename =&gt; $file) {
	if (strpos(basename($filename), ".") !== 0) {
		if (intval(explode(".", basename($filename)) [0]) &lt; $expiration) unlink($filename);
	}
}
RemoveEmptySubFolders($cache);

function RemoveEmptySubFolders($path) {
	$empty = true;
	foreach (glob($path . DIRECTORY_SEPARATOR . "*") as $file) {
		$empty&amp;= is_dir($file) &amp;&amp; RemoveEmptySubFolders($file);
	}
	return $empty &amp;&amp; rmdir($path);
}</string>
				<key>type</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.script</string>
			<key>uid</key>
			<string>5F84ABA7-BE4D-4B6C-B48A-418ADEB09ACB</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>text</key>
				<string>Search PirateBay for '{query}'</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.fallback</string>
			<key>uid</key>
			<string>7E0CC73D-1624-4E18-8D05-C865A95E4ECD</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>4</integer>
				<key>script</key>
				<string>tell application "Alfred 2" to search "pirate " &amp; "{query}"</string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>CB9BF956-62A4-4B48-BCA6-F8F2B15B2C0A</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>plusspaces</key>
				<false/>
				<key>url</key>
				<string>http://thepiratebay.se/search/{query}/0/7/0</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>86FC9EB0-92B8-431C-9F6E-0E85B4231B95</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>If you want to use the direct streaming function, you’ll have to install NodeJS and Peerflix on your own.</string>
	<key>uidata</key>
	<dict>
		<key>11D00DB4-9EF5-4B26-9CAC-0B38A8BC18CC</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>3EA65E6C-C782-4E38-9E09-80C12CEC5901</key>
		<dict>
			<key>ypos</key>
			<real>370</real>
		</dict>
		<key>57121C63-F8DD-405E-95D4-9187890FAC23</key>
		<dict>
			<key>ypos</key>
			<real>490</real>
		</dict>
		<key>5F84ABA7-BE4D-4B6C-B48A-418ADEB09ACB</key>
		<dict>
			<key>ypos</key>
			<real>730</real>
		</dict>
		<key>62417640-7FEF-4354-AD51-9CEDD837056A</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>7B2FEBEA-C1A3-4863-B06C-C8E75A2CFA29</key>
		<dict>
			<key>ypos</key>
			<real>610</real>
		</dict>
		<key>7B7195A0-B322-47B5-93A4-CABF636DC7D7</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>7E0CC73D-1624-4E18-8D05-C865A95E4ECD</key>
		<dict>
			<key>ypos</key>
			<real>850</real>
		</dict>
		<key>868D1166-AD5A-4A91-B944-6DCEBDBAF3E0</key>
		<dict>
			<key>ypos</key>
			<real>250</real>
		</dict>
		<key>86FC9EB0-92B8-431C-9F6E-0E85B4231B95</key>
		<dict>
			<key>ypos</key>
			<real>970</real>
		</dict>
		<key>9182F96C-F392-49BF-AF44-B8AC2B369C06</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>B9233BFF-87D0-4C35-AE45-C019CB36985A</key>
		<dict>
			<key>ypos</key>
			<real>370</real>
		</dict>
		<key>CB9BF956-62A4-4B48-BCA6-F8F2B15B2C0A</key>
		<dict>
			<key>ypos</key>
			<real>850</real>
		</dict>
		<key>D135D6C9-2EF0-484D-A840-217D9AD43EFB</key>
		<dict>
			<key>ypos</key>
			<real>250</real>
		</dict>
		<key>DE0FE3A3-E0E1-4C90-AA68-052CC36D5238</key>
		<dict>
			<key>ypos</key>
			<real>610</real>
		</dict>
		<key>E5516F08-E1D8-4E2B-8987-04332CD4306A</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>F1C16B28-B0AE-4FFB-92C9-CE5DAD7825FC</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>F29A164F-4FC1-4B89-9271-6B3B9E000AF8</key>
		<dict>
			<key>ypos</key>
			<real>490</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>florianpellet.com</string>
</dict>
</plist>
